<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: vagrant | Eesseak]]></title>
  <link href="http://esseak.github.io/blog/categories/vagrant/atom.xml" rel="self"/>
  <link href="http://esseak.github.io/"/>
  <updated>2014-12-31T11:22:35+08:00</updated>
  <id>http://esseak.github.io/</id>
  <author>
    <name><![CDATA[esseak]]></name>
    <email><![CDATA[esseak@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[vagrant-tutorial]]></title>
    <link href="http://esseak.github.io/blog/2014/12/30/vagrant-tutorial/"/>
    <updated>2014-12-30T16:01:37+08:00</updated>
    <id>http://esseak.github.io/blog/2014/12/30/vagrant-tutorial</id>
    <content type="html"><![CDATA[<p>Vagrant是一个基于Ruby的工具，用于创建和部署虚拟化开发环境。我们用vagrant可以统一开发人员的开发环境，而不必每个人员每台开发机上都从头搭建开发环境。想必每个人遇到需要统一开发环境的需求，比如数据库版本，PHP版本，Ruby版本。项目大一些的可能会用到其他辅助的方案比如：Solr，redis等。如果使用Vagrant你可以几步把这些都安装好。</p>

<h3>Vagrant配置</h3>

<ol>
<li><p>Vagrant基于虚拟机，所以下载VirtualBox并且安装。</p>

<p> <code>http://download.virtualbox.org/virtualbox/4.3.20/VirtualBox-4.3.20-96996-OSX.dmg</code></p></li>
<li><p>建立工作目录，如works</p>

<p> <code>mkdir works</code></p></li>
<li><p>进入/works ，并且通过一个box文件添加一个box</p>

<p> <code>cd works</code></p>

<p> <code>vagrant box add workstation [package.box_path]</code></p></li>
<li><p>初始化vm</p>

<p> <code>vagrant init workstation</code></p>

<p> 这时候会发现文件夹里生成了一个Vagrantfile，这里是对workstation虚拟机的设置。里面设置比较重要的有</p>

<p> <code>config.vm.network "private_network", ip: "192.168.33.10"</code></p>

<p> 设置vagrant中虚拟机映射ip为192.168.33.10，</p>

<p> <code>config.vm.synced_folder "./root", "/vagrant", :type =&gt; 'nfs'</code></p>

<p> 设置vagrant中虚拟机和外部系统的共享文件，mac党要打开nfs选项有助于性能的提升，win党不需要。</p></li>
<li><p>启动vagrant</p>

<p> <code>vagrant up</code></p>

<p> 启动中因为使用了nfs中途需要输入root密码，对vagrant常用操作还有下面几个</p>

<ul>
<li>vagrant up （启动 vagrant中虚拟主机）</li>
<li>vagrant reload （重启 vagrant中虚拟主机）</li>
<li>vagrant halt （关闭 vagrant中虚拟主机）</li>
<li>vagrant suspend （暂停 vagrant中虚拟主机）</li>
<li>vagrant resume （恢复 vagrant中虚拟主机）</li>
<li>vagrant destroy（删除 vagrant中虚拟主机）</li>
</ul>


<p> 如果顺利vagrant正常启动后就可以开工了，使用</p>

<p> <code>vagrant ssh</code></p>

<p> 登录到vagrant中虚拟机，win使用PuTTY登录vagrant虚拟机。账户：root 密码：vagrant</p>

<p> 现在可以在vagrant中配置和搭建开发环境了，代码尽量放在设置的共享目录里，方便在主机系统中编辑。</p></li>
</ol>


<h3>打包Box</h3>

<ol>
<li><p>如果是private_network网络配置需要在虚拟机种删除网络配置</p>

<p> <code>sudo rm /etc/udev/rules.d/70-persistent-net.rules</code></p></li>
<li><p>打包Box</p>

<p> <code>vagrant package --output workstation_box.box</code></p>

<p> 现在你可以分发到大伙手里了</p></li>
</ol>

]]></content>
  </entry>
  
</feed>
